// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Management.proto

package proto.management;

/**
 * The interface Send contact info or builder.
 */
public interface SendContactInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:management.SendContactInfo)
        com.google.protobuf.MessageOrBuilder {

    /**
     * Has username boolean.
     *
     * @return the boolean
     */
    boolean hasUsername();

    /**
     * Gets username.
     *
     * @return the username
     */
    String getUsername();

    /**
     * Gets username bytes.
     *
     * @return the username bytes
     */
    com.google.protobuf.ByteString
    getUsernameBytes();

    /**
     * Gets contacts list.
     *
     * @return the contacts list
     */
    java.util.List<SendContactInfo.Contact>
    getContactsList();

    /**
     * Gets contacts.
     *
     * @param index the index
     * @return the contacts
     */
    SendContactInfo.Contact getContacts(int index);

    /**
     * Gets contacts count.
     *
     * @return the contacts count
     */
    int getContactsCount();

    /**
     * Gets contacts or builder list.
     *
     * @return the contacts or builder list
     */
    java.util.List<? extends SendContactInfo.ContactOrBuilder>
    getContactsOrBuilderList();

    /**
     * Gets contacts or builder.
     *
     * @param index the index
     * @return the contacts or builder
     */
    SendContactInfo.ContactOrBuilder getContactsOrBuilder(
            int index);

    /**
     * Gets blocked list.
     *
     * @return the blocked list
     */
    java.util.List<String>
    getBlockedList();

    /**
     * Gets blocked count.
     *
     * @return the blocked count
     */
    int getBlockedCount();

    /**
     * Gets blocked.
     *
     * @param index the index
     * @return the blocked
     */
    String getBlocked(int index);

    /**
     * Gets blocked bytes.
     *
     * @param index the index
     * @return the blocked bytes
     */
    com.google.protobuf.ByteString
    getBlockedBytes(int index);
}
